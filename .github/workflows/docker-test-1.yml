# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        ftpserverscript: ['vsftpd.sh', 'proftpd.sh']
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Start ftp server
        run: |
          #docker run -d -p 21:21 -p 30000-30009:30000-30009 instrumentisto/pure-ftpd
          
          echo "# Variables"
          ftpDir="${{ runner.temp }}/ftpDir"
          echo "ftpDir: '$ftpDir'"
          
          echo "# Make dir"
          mkdir "$ftpDir"
          
          echo "# Start ftp server"
          echo "$GITHUB_WORKSPACE/.github/workflows/${{ matrix.ftpserverscript }}"
          . $GITHUB_WORKSPACE/.github/workflows/${{ matrix.ftpserverscript }}

      - name: Run tests
        run: |
          dotnet test -c Release FluentFTP.Tests.Integration/FluentFTP.Tests.Integration.csproj -p:ParallelizeTestCollections=false
      
      - name: Check dir
        if: always()
        run: |
          echo "# list start"
          find ${{ runner.temp }}
          echo "# list completed"
